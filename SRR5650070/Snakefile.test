rule all:
    input:
        "test_output/agathobacter_faecis.csv",
        "test_output/SRR5650070.x.gtdb-rs214-agatha.gather.txt",
        "test_output/agathobacter_faecis_abunds.png",
        "test_output/agathobacter_faecis_hashes.txt",

rule fastgather:
    input:
        sig= "SRR5650070.trim.sig.zip",
        db="gtdb-rs214-agatha-k21.zip",
    output:
        "test_output/SRR5650070.x.gtdb-rs214-agatha.fastgather.csv",
    shell: """
        sourmash scripts fastgather {input.sig} {input.db} \
            -o {output} -k 21 -t 0
    """

rule gather:
    input:
        sketch="SRR5650070.trim.sig.zip",
        db="gtdb-rs214-agatha-k21.zip",
        fastgather_out="test_output/SRR5650070.x.gtdb-rs214-agatha.fastgather.csv",
        # @CTB switch over to test_output one, later
        hash_csv="agathobacter_faecis.csv",
    output:
        csv="test_output/SRR5650070.x.gtdb-rs214-agatha.gather.csv",
        txt="test_output/SRR5650070.x.gtdb-rs214-agatha.gather.txt",
    shell: """
        ../scripts/recalc-gather-pangenome.py {input.sketch} {input.db} \
            {input.fastgather_out} {input.hash_csv} -o {output.csv} \
            > {output.txt}
    """

rule build_classify_hashes:
    input:
        pangenome_sig="../agatha-merged.sig.zip",
    output:
        csv="test_output/agathobacter_faecis.csv",
    params:
        ksize=21,
        name="s__Agathobacteria",
    shell: """
        ../scripts/pangenome_elements.py -d {input.pangenome_sig} \
             -o {output.csv} -k {params.ksize} -l {params.name:q}
    """

rule pangenome_classify:
    input:
        sig="SRR5650070.trim.sig.zip",
        hash_csv="agathobacter_faecis.csv",
    output:
        "test_output/agathobacter_faecis_hashes.txt",
    shell: """
        ../scripts/classify-hashes.py {input.sig} {input.hash_csv} \
            -k 21 > {output}
    """
rule pangenome_abundhist:
    input:
        sig="SRR5650070.trim.sig.zip",
        hash_csv="agathobacter_faecis.csv",
    output:
        "test_output/agathobacter_faecis_abunds.png",
    shell: """
        ../scripts/classify-hashes-abundhist.py {input.sig} {input.hash_csv} \
            -k 21 -o {output} -M 600
    """
